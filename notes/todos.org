#+TITLE:Connect4 Todos

* General
** DONE Minmax should throw an exception when final board does not match with original one
** TODO Study analysis-boards
** DONE After Unit-Testing set default value of *engine-configuration-depth-relative-score* to t
** DONE After Unit-Testing set default value of *engine-configuration-peek-is-four* to t
** DONE After Unit-Testing remove variable *engine-configuration-score-calculation-considers-three*
** DONE Clean up the messy board-interface
** DONE Establish packages for engine, board and console related stuff

* Unit Tests
** TODO Remove redundancies from tests
** DONE Tests should not depend on order of moves played by the Minmax
** DONE Remove *engine-configuration-skip-randomizer* option
** DONE Remove *engine-configuration-depth-relative-score* option
** DONE Toggle default value of *engine-configuration-depth-relative-score* and adapt/extend tests
** DONE Toggle default value of *engine-configuration-score-calculation-considers-three* and adapt/extend tests
** DONE Test of peek-is-four()
** TODO Test of generate-moves()
** DONE Make lisp-unit print a stacktrace or enter into the debugger on execution errors
** DONE Run tests with abcl
** DONE connect4-test.asd should not declare dependency on console related stuff

* Board Score Evaluation
** DONE Take into account 3 pieces in a row
** DONE Prefer moves near the center of the board
** TODO Check calculation of column-weights for width 7 (weights should differ for each column)

* Engine optimization
** DONE Quit row evaluation when player has 4 pieces in a row for the current column
** DONE Check if for current row any column results in a direct 4 and quit row. If not then deep traverse row.
** TODO Alpha/Beta-Pruning

* Refactoring
** Cleanup
*** DONE Move board code out of engine into separate folder
** First Step
*** TODO Define a proper engine interface
*** DONE Engine should encapsulate board and minmax related functionality
*** TODO Engine should expose minimal interface
*** TODO Implementations such as connect4-console should talk with engine only
** Second Step
*** TODO Generalize hard coded logic of gamecommands.lisp
*** TODO Maybe define some kind of language on top of engine



