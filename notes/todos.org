#+TITLE:Connect4 Todos

* General
** DONE Minmax should throw an exception when final board does not match with original one
** TODO Study analysis-boards
** DONE After Unit-Testing set default value of *engine-configuration-depth-relative-score* to t
** DONE After Unit-Testing set default value of *engine-configuration-peek-is-four* to t
** DONE After Unit-Testing remove variable *engine-configuration-score-calculation-considers-three*
** DONE Clean up the messy board-interface
** DONE Establish packages for engine, board and console related stuff

* Unit Tests
** TODO Remove redundancies from tests
** DONE Tests should not depend on order of moves played by the Minmax
** DONE Remove *engine-configuration-skip-randomizer* option
** DONE Remove *engine-configuration-depth-relative-score* option
** DONE Toggle default value of *engine-configuration-depth-relative-score* and adapt/extend tests
** DONE Toggle default value of *engine-configuration-score-calculation-considers-three* and adapt/extend tests
** DONE Test of peek-is-four()
** TODO Test of generate-moves()
** DONE Make lisp-unit print a stacktrace or enter into the debugger on execution errors
** DONE Run tests with abcl
** DONE connect4-test.asd should not declare dependency on console related stuff

** TODO Write tests for ccfi-server (server.lisp)
** TODO asdf:load-system tests for server components
* Board Score Evaluation
** DONE Take into account 3 pieces in a row
** DONE Prefer moves near the center of the board
** TODO Check calculation of column-weights for width 7 (weights should differ for each column)

* Engine optimization
** DONE Quit row evaluation when player has 4 pieces in a row for the current column
** DONE Check if for current row any column results in a direct 4 and quit row. If not then deep traverse row.
** TODO Alpha/Beta-Pruning

* Engine
** TODO Establish a board traverser
*** Holds current board and traversal path
*** Hides board cloning/manipulation related logic
*** Used by minmax function
** TODO MATE-Konstante definieren (engine.lisp)
* Connect4-Console
** Add help method to command-table
** Merge help-text functions into one and use reduce function
* CCFI-Server / CCFI-Core
** TODO Move server code into core
** TODO Error handling (invalid placement error)
** TODO More robust parsing
** TODO How to signal wins/loses
** TODO Suppress NIL output
** TODO How to signal that no move is available because all fields are occupied?
** TODO GUI -> Server: Implement 'depth' parameter of go command 
** TODO Engine -> GUI: Send 'info'
** TODO nset-field(EMPTY) -> nclear-field() 
