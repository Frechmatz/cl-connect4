

Concept for a Connect4 Domain Specific Language
###############################################


Problems of my code
===================

- Code of gamecommands.lisp is too deeply nested
- Code of gamecommands.lisp is too redundant
- Code of gamecommands.lisp depends on console

Goal
====

Design of a Connect4 domain specific language.

gamecommands.lisp needs to be replaced by a more general solution that
is easy to read and can be used by a console implementation as well as
by a game server.

Analysis
========

Typical game sequences
----------------------

1. Let human throw a piece

- Validate Move
- Do Move

2. Let computer throw a piece

- Find Move
- Do Move

3. Let human throw a piece and calculate computers counter strike

- Validate Move
- Do Move
- Find Move
- Do Move

4. Provide a hint regarding the next best move

- Find Move


Discussion
==========

- Define sequence steps
- Add glue code (interceptors) between sequence steps
- Glue code is not performance critical
- Glue code may not depend on current and next sequence step
- Glue code may depend on client (console/server)

How code may look like
----------------------

- (play-game-sequence ((validate-move) (do-move) (toggle-color) (find-move) (do-move)))
- (play-game-sequence ((do-move) (find-move) (do-move)))





